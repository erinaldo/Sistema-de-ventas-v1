'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión del motor en tiempo de ejecución:2.0.50727.8933
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsImagenes"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsImagenes
    Inherits Global.System.Data.DataSet
    
    Private tableImagenes As ImagenesDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("Imagenes")) Is Nothing) Then
                MyBase.Tables.Add(New ImagenesDataTable(ds.Tables("Imagenes")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Imagenes() As ImagenesDataTable
        Get
            Return Me.tableImagenes
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsImagenes = CType(MyBase.Clone,dsImagenes)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("Imagenes")) Is Nothing) Then
                MyBase.Tables.Add(New ImagenesDataTable(ds.Tables("Imagenes")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableImagenes = CType(MyBase.Tables("Imagenes"),ImagenesDataTable)
        If (initTable = true) Then
            If (Not (Me.tableImagenes) Is Nothing) Then
                Me.tableImagenes.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "dsImagenes"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsImagenes.xsd"
        Me.Locale = New Global.System.Globalization.CultureInfo("en-US")
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableImagenes = New ImagenesDataTable
        MyBase.Tables.Add(Me.tableImagenes)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeImagenes() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsImagenes = New dsImagenes
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub ImagenesRowChangeEventHandler(ByVal sender As Object, ByVal e As ImagenesRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ImagenesDataTable
        Inherits Global.System.Data.TypedTableBase(Of ImagenesRow)
        
        Private columnnombre_cliente As Global.System.Data.DataColumn
        
        Private columnrut_cliente As Global.System.Data.DataColumn
        
        Private columnImagen As Global.System.Data.DataColumn
        
        Private columndeuda_total As Global.System.Data.DataColumn
        
        Private columndireccion_cliente As Global.System.Data.DataColumn
        
        Private columntelefono_cliente As Global.System.Data.DataColumn
        
        Private columnciudad_cliente As Global.System.Data.DataColumn
        
        Private columntipo_documento As Global.System.Data.DataColumn
        
        Private columnnro_doc As Global.System.Data.DataColumn
        
        Private columnfecha_doc As Global.System.Data.DataColumn
        
        Private columntotal_doc As Global.System.Data.DataColumn
        
        Private columnsaldo As Global.System.Data.DataColumn
        
        Private columndesglose_palabras As Global.System.Data.DataColumn
        
        Private columnnombre_empresa As Global.System.Data.DataColumn
        
        Private columngiro_empresa As Global.System.Data.DataColumn
        
        Private columndireccion_empresa As Global.System.Data.DataColumn
        
        Private columncomuna_empresa As Global.System.Data.DataColumn
        
        Private columntelefono_empresa As Global.System.Data.DataColumn
        
        Private columncorreo_empresa As Global.System.Data.DataColumn
        
        Private columnrut_empresa As Global.System.Data.DataColumn
        
        Private columnsaldo_final As Global.System.Data.DataColumn
        
        Private columnrecinto As Global.System.Data.DataColumn
        
        Private columnfecha_vencimiento As Global.System.Data.DataColumn
        
        Private columninteres As Global.System.Data.DataColumn
        
        Private columngastos As Global.System.Data.DataColumn
        
        Private columncupo_total As Global.System.Data.DataColumn
        
        Private columncupo_disponible As Global.System.Data.DataColumn
        
        Private columndeuda As Global.System.Data.DataColumn
        
        Private columntotal_1 As Global.System.Data.DataColumn
        
        Private columntotal_2 As Global.System.Data.DataColumn
        
        Private columntotal_3 As Global.System.Data.DataColumn
        
        Private columntotal_4 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Imagenes"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nombre_clienteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnombre_cliente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property rut_clienteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrut_cliente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ImagenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImagen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property deuda_totalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndeuda_total
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property direccion_clienteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndireccion_cliente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property telefono_clienteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntelefono_cliente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ciudad_clienteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnciudad_cliente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property tipo_documentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntipo_documento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nro_docColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnro_doc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property fecha_docColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfecha_doc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property total_docColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntotal_doc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property saldoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsaldo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property desglose_palabrasColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndesglose_palabras
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nombre_empresaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnombre_empresa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property giro_empresaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columngiro_empresa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property direccion_empresaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndireccion_empresa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property comuna_empresaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncomuna_empresa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property telefono_empresaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntelefono_empresa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property correo_empresaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncorreo_empresa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property rut_empresaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrut_empresa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property saldo_finalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsaldo_final
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property recintoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrecinto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property fecha_vencimientoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfecha_vencimiento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property interesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columninteres
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property gastosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columngastos
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cupo_totalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncupo_total
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cupo_disponibleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncupo_disponible
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property deudaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndeuda
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property total_1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columntotal_1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property total_2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columntotal_2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property total_3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columntotal_3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property total_4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columntotal_4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ImagenesRow
            Get
                Return CType(Me.Rows(index),ImagenesRow)
            End Get
        End Property
        
        Public Event ImagenesRowChanging As ImagenesRowChangeEventHandler
        
        Public Event ImagenesRowChanged As ImagenesRowChangeEventHandler
        
        Public Event ImagenesRowDeleting As ImagenesRowChangeEventHandler
        
        Public Event ImagenesRowDeleted As ImagenesRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddImagenesRow(ByVal row As ImagenesRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddImagenesRow( _
                    ByVal nombre_cliente As String,  _
                    ByVal rut_cliente As String,  _
                    ByVal Imagen() As Byte,  _
                    ByVal deuda_total As String,  _
                    ByVal direccion_cliente As String,  _
                    ByVal telefono_cliente As String,  _
                    ByVal ciudad_cliente As String,  _
                    ByVal tipo_documento As String,  _
                    ByVal nro_doc As String,  _
                    ByVal fecha_doc As String,  _
                    ByVal total_doc As Integer,  _
                    ByVal saldo As Integer,  _
                    ByVal desglose_palabras As String,  _
                    ByVal nombre_empresa As String,  _
                    ByVal giro_empresa As String,  _
                    ByVal direccion_empresa As String,  _
                    ByVal comuna_empresa As String,  _
                    ByVal telefono_empresa As String,  _
                    ByVal correo_empresa As String,  _
                    ByVal rut_empresa As String,  _
                    ByVal saldo_final As Integer,  _
                    ByVal recinto As String,  _
                    ByVal fecha_vencimiento As String,  _
                    ByVal interes As Integer,  _
                    ByVal gastos As Integer,  _
                    ByVal cupo_total As String,  _
                    ByVal cupo_disponible As String,  _
                    ByVal deuda As String,  _
                    ByVal total_1 As Integer,  _
                    ByVal total_2 As Integer,  _
                    ByVal total_3 As Integer,  _
                    ByVal total_4 As Integer) As ImagenesRow
            Dim rowImagenesRow As ImagenesRow = CType(Me.NewRow,ImagenesRow)
            Dim columnValuesArray() As Object = New Object() {nombre_cliente, rut_cliente, Imagen, deuda_total, direccion_cliente, telefono_cliente, ciudad_cliente, tipo_documento, nro_doc, fecha_doc, total_doc, saldo, desglose_palabras, nombre_empresa, giro_empresa, direccion_empresa, comuna_empresa, telefono_empresa, correo_empresa, rut_empresa, saldo_final, recinto, fecha_vencimiento, interes, gastos, cupo_total, cupo_disponible, deuda, total_1, total_2, total_3, total_4}
            rowImagenesRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowImagenesRow)
            Return rowImagenesRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ImagenesDataTable = CType(MyBase.Clone,ImagenesDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ImagenesDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnnombre_cliente = MyBase.Columns("nombre_cliente")
            Me.columnrut_cliente = MyBase.Columns("rut_cliente")
            Me.columnImagen = MyBase.Columns("Imagen")
            Me.columndeuda_total = MyBase.Columns("deuda_total")
            Me.columndireccion_cliente = MyBase.Columns("direccion_cliente")
            Me.columntelefono_cliente = MyBase.Columns("telefono_cliente")
            Me.columnciudad_cliente = MyBase.Columns("ciudad_cliente")
            Me.columntipo_documento = MyBase.Columns("tipo_documento")
            Me.columnnro_doc = MyBase.Columns("nro_doc")
            Me.columnfecha_doc = MyBase.Columns("fecha_doc")
            Me.columntotal_doc = MyBase.Columns("total_doc")
            Me.columnsaldo = MyBase.Columns("saldo")
            Me.columndesglose_palabras = MyBase.Columns("desglose_palabras")
            Me.columnnombre_empresa = MyBase.Columns("nombre_empresa")
            Me.columngiro_empresa = MyBase.Columns("giro_empresa")
            Me.columndireccion_empresa = MyBase.Columns("direccion_empresa")
            Me.columncomuna_empresa = MyBase.Columns("comuna_empresa")
            Me.columntelefono_empresa = MyBase.Columns("telefono_empresa")
            Me.columncorreo_empresa = MyBase.Columns("correo_empresa")
            Me.columnrut_empresa = MyBase.Columns("rut_empresa")
            Me.columnsaldo_final = MyBase.Columns("saldo_final")
            Me.columnrecinto = MyBase.Columns("recinto")
            Me.columnfecha_vencimiento = MyBase.Columns("fecha_vencimiento")
            Me.columninteres = MyBase.Columns("interes")
            Me.columngastos = MyBase.Columns("gastos")
            Me.columncupo_total = MyBase.Columns("cupo_total")
            Me.columncupo_disponible = MyBase.Columns("cupo_disponible")
            Me.columndeuda = MyBase.Columns("deuda")
            Me.columntotal_1 = MyBase.Columns("total_1")
            Me.columntotal_2 = MyBase.Columns("total_2")
            Me.columntotal_3 = MyBase.Columns("total_3")
            Me.columntotal_4 = MyBase.Columns("total_4")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnnombre_cliente = New Global.System.Data.DataColumn("nombre_cliente", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnombre_cliente)
            Me.columnrut_cliente = New Global.System.Data.DataColumn("rut_cliente", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrut_cliente)
            Me.columnImagen = New Global.System.Data.DataColumn("Imagen", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImagen)
            Me.columndeuda_total = New Global.System.Data.DataColumn("deuda_total", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndeuda_total)
            Me.columndireccion_cliente = New Global.System.Data.DataColumn("direccion_cliente", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndireccion_cliente)
            Me.columntelefono_cliente = New Global.System.Data.DataColumn("telefono_cliente", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntelefono_cliente)
            Me.columnciudad_cliente = New Global.System.Data.DataColumn("ciudad_cliente", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnciudad_cliente)
            Me.columntipo_documento = New Global.System.Data.DataColumn("tipo_documento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntipo_documento)
            Me.columnnro_doc = New Global.System.Data.DataColumn("nro_doc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnro_doc)
            Me.columnfecha_doc = New Global.System.Data.DataColumn("fecha_doc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfecha_doc)
            Me.columntotal_doc = New Global.System.Data.DataColumn("total_doc", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntotal_doc)
            Me.columnsaldo = New Global.System.Data.DataColumn("saldo", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsaldo)
            Me.columndesglose_palabras = New Global.System.Data.DataColumn("desglose_palabras", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndesglose_palabras)
            Me.columnnombre_empresa = New Global.System.Data.DataColumn("nombre_empresa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnombre_empresa)
            Me.columngiro_empresa = New Global.System.Data.DataColumn("giro_empresa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columngiro_empresa)
            Me.columndireccion_empresa = New Global.System.Data.DataColumn("direccion_empresa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndireccion_empresa)
            Me.columncomuna_empresa = New Global.System.Data.DataColumn("comuna_empresa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncomuna_empresa)
            Me.columntelefono_empresa = New Global.System.Data.DataColumn("telefono_empresa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntelefono_empresa)
            Me.columncorreo_empresa = New Global.System.Data.DataColumn("correo_empresa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncorreo_empresa)
            Me.columnrut_empresa = New Global.System.Data.DataColumn("rut_empresa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrut_empresa)
            Me.columnsaldo_final = New Global.System.Data.DataColumn("saldo_final", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsaldo_final)
            Me.columnrecinto = New Global.System.Data.DataColumn("recinto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrecinto)
            Me.columnfecha_vencimiento = New Global.System.Data.DataColumn("fecha_vencimiento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfecha_vencimiento)
            Me.columninteres = New Global.System.Data.DataColumn("interes", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columninteres)
            Me.columngastos = New Global.System.Data.DataColumn("gastos", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columngastos)
            Me.columncupo_total = New Global.System.Data.DataColumn("cupo_total", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncupo_total)
            Me.columncupo_disponible = New Global.System.Data.DataColumn("cupo_disponible", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncupo_disponible)
            Me.columndeuda = New Global.System.Data.DataColumn("deuda", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndeuda)
            Me.columntotal_1 = New Global.System.Data.DataColumn("total_1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntotal_1)
            Me.columntotal_2 = New Global.System.Data.DataColumn("total_2", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntotal_2)
            Me.columntotal_3 = New Global.System.Data.DataColumn("total_3", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntotal_3)
            Me.columntotal_4 = New Global.System.Data.DataColumn("total_4", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntotal_4)
            Me.columnnombre_cliente.Caption = "Codigo Imagen"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewImagenesRow() As ImagenesRow
            Return CType(Me.NewRow,ImagenesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ImagenesRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ImagenesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ImagenesRowChangedEvent) Is Nothing) Then
                RaiseEvent ImagenesRowChanged(Me, New ImagenesRowChangeEvent(CType(e.Row,ImagenesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ImagenesRowChangingEvent) Is Nothing) Then
                RaiseEvent ImagenesRowChanging(Me, New ImagenesRowChangeEvent(CType(e.Row,ImagenesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ImagenesRowDeletedEvent) Is Nothing) Then
                RaiseEvent ImagenesRowDeleted(Me, New ImagenesRowChangeEvent(CType(e.Row,ImagenesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ImagenesRowDeletingEvent) Is Nothing) Then
                RaiseEvent ImagenesRowDeleting(Me, New ImagenesRowChangeEvent(CType(e.Row,ImagenesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveImagenesRow(ByVal row As ImagenesRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsImagenes = New dsImagenes
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ImagenesDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class ImagenesRow
        Inherits Global.System.Data.DataRow
        
        Private tableImagenes As ImagenesDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableImagenes = CType(Me.Table,ImagenesDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nombre_cliente() As String
            Get
                Try 
                    Return CType(Me(Me.tableImagenes.nombre_clienteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'nombre_cliente' de la tabla 'Imagenes' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableImagenes.nombre_clienteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property rut_cliente() As String
            Get
                Try 
                    Return CType(Me(Me.tableImagenes.rut_clienteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'rut_cliente' de la tabla 'Imagenes' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableImagenes.rut_clienteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Imagen() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableImagenes.ImagenColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Imagen' de la tabla 'Imagenes' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableImagenes.ImagenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property deuda_total() As String
            Get
                Try 
                    Return CType(Me(Me.tableImagenes.deuda_totalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'deuda_total' de la tabla 'Imagenes' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableImagenes.deuda_totalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property direccion_cliente() As String
            Get
                Try 
                    Return CType(Me(Me.tableImagenes.direccion_clienteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'direccion_cliente' de la tabla 'Imagenes' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableImagenes.direccion_clienteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property telefono_cliente() As String
            Get
                Try 
                    Return CType(Me(Me.tableImagenes.telefono_clienteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'telefono_cliente' de la tabla 'Imagenes' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableImagenes.telefono_clienteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ciudad_cliente() As String
            Get
                Try 
                    Return CType(Me(Me.tableImagenes.ciudad_clienteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ciudad_cliente' de la tabla 'Imagenes' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableImagenes.ciudad_clienteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tipo_documento() As String
            Get
                Try 
                    Return CType(Me(Me.tableImagenes.tipo_documentoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'tipo_documento' de la tabla 'Imagenes' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableImagenes.tipo_documentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nro_doc() As String
            Get
                Try 
                    Return CType(Me(Me.tableImagenes.nro_docColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'nro_doc' de la tabla 'Imagenes' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableImagenes.nro_docColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property fecha_doc() As String
            Get
                Try 
                    Return CType(Me(Me.tableImagenes.fecha_docColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'fecha_doc' de la tabla 'Imagenes' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableImagenes.fecha_docColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property total_doc() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableImagenes.total_docColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'total_doc' de la tabla 'Imagenes' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableImagenes.total_docColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property saldo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableImagenes.saldoColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'saldo' de la tabla 'Imagenes' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableImagenes.saldoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property desglose_palabras() As String
            Get
                Try 
                    Return CType(Me(Me.tableImagenes.desglose_palabrasColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'desglose_palabras' de la tabla 'Imagenes' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableImagenes.desglose_palabrasColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nombre_empresa() As String
            Get
                Try 
                    Return CType(Me(Me.tableImagenes.nombre_empresaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'nombre_empresa' de la tabla 'Imagenes' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableImagenes.nombre_empresaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property giro_empresa() As String
            Get
                Try 
                    Return CType(Me(Me.tableImagenes.giro_empresaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'giro_empresa' de la tabla 'Imagenes' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableImagenes.giro_empresaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property direccion_empresa() As String
            Get
                Try 
                    Return CType(Me(Me.tableImagenes.direccion_empresaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'direccion_empresa' de la tabla 'Imagenes' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableImagenes.direccion_empresaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property comuna_empresa() As String
            Get
                Try 
                    Return CType(Me(Me.tableImagenes.comuna_empresaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'comuna_empresa' de la tabla 'Imagenes' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableImagenes.comuna_empresaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property telefono_empresa() As String
            Get
                Try 
                    Return CType(Me(Me.tableImagenes.telefono_empresaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'telefono_empresa' de la tabla 'Imagenes' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableImagenes.telefono_empresaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property correo_empresa() As String
            Get
                Try 
                    Return CType(Me(Me.tableImagenes.correo_empresaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'correo_empresa' de la tabla 'Imagenes' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableImagenes.correo_empresaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property rut_empresa() As String
            Get
                Try 
                    Return CType(Me(Me.tableImagenes.rut_empresaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'rut_empresa' de la tabla 'Imagenes' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableImagenes.rut_empresaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property saldo_final() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableImagenes.saldo_finalColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'saldo_final' de la tabla 'Imagenes' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableImagenes.saldo_finalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property recinto() As String
            Get
                Try 
                    Return CType(Me(Me.tableImagenes.recintoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'recinto' de la tabla 'Imagenes' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableImagenes.recintoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property fecha_vencimiento() As String
            Get
                Try 
                    Return CType(Me(Me.tableImagenes.fecha_vencimientoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'fecha_vencimiento' de la tabla 'Imagenes' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableImagenes.fecha_vencimientoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property interes() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableImagenes.interesColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'interes' de la tabla 'Imagenes' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableImagenes.interesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property gastos() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableImagenes.gastosColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'gastos' de la tabla 'Imagenes' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableImagenes.gastosColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cupo_total() As String
            Get
                Try 
                    Return CType(Me(Me.tableImagenes.cupo_totalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'cupo_total' de la tabla 'Imagenes' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableImagenes.cupo_totalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cupo_disponible() As String
            Get
                Try 
                    Return CType(Me(Me.tableImagenes.cupo_disponibleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'cupo_disponible' de la tabla 'Imagenes' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableImagenes.cupo_disponibleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property deuda() As String
            Get
                Try 
                    Return CType(Me(Me.tableImagenes.deudaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'deuda' de la tabla 'Imagenes' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableImagenes.deudaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property total_1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableImagenes.total_1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'total_1' de la tabla 'Imagenes' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableImagenes.total_1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property total_2() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableImagenes.total_2Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'total_2' de la tabla 'Imagenes' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableImagenes.total_2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property total_3() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableImagenes.total_3Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'total_3' de la tabla 'Imagenes' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableImagenes.total_3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property total_4() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableImagenes.total_4Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'total_4' de la tabla 'Imagenes' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableImagenes.total_4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isnombre_clienteNull() As Boolean
            Return Me.IsNull(Me.tableImagenes.nombre_clienteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setnombre_clienteNull()
            Me(Me.tableImagenes.nombre_clienteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isrut_clienteNull() As Boolean
            Return Me.IsNull(Me.tableImagenes.rut_clienteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setrut_clienteNull()
            Me(Me.tableImagenes.rut_clienteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsImagenNull() As Boolean
            Return Me.IsNull(Me.tableImagenes.ImagenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetImagenNull()
            Me(Me.tableImagenes.ImagenColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdeuda_totalNull() As Boolean
            Return Me.IsNull(Me.tableImagenes.deuda_totalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdeuda_totalNull()
            Me(Me.tableImagenes.deuda_totalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdireccion_clienteNull() As Boolean
            Return Me.IsNull(Me.tableImagenes.direccion_clienteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdireccion_clienteNull()
            Me(Me.tableImagenes.direccion_clienteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Istelefono_clienteNull() As Boolean
            Return Me.IsNull(Me.tableImagenes.telefono_clienteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Settelefono_clienteNull()
            Me(Me.tableImagenes.telefono_clienteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isciudad_clienteNull() As Boolean
            Return Me.IsNull(Me.tableImagenes.ciudad_clienteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setciudad_clienteNull()
            Me(Me.tableImagenes.ciudad_clienteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Istipo_documentoNull() As Boolean
            Return Me.IsNull(Me.tableImagenes.tipo_documentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Settipo_documentoNull()
            Me(Me.tableImagenes.tipo_documentoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isnro_docNull() As Boolean
            Return Me.IsNull(Me.tableImagenes.nro_docColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setnro_docNull()
            Me(Me.tableImagenes.nro_docColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isfecha_docNull() As Boolean
            Return Me.IsNull(Me.tableImagenes.fecha_docColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setfecha_docNull()
            Me(Me.tableImagenes.fecha_docColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Istotal_docNull() As Boolean
            Return Me.IsNull(Me.tableImagenes.total_docColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Settotal_docNull()
            Me(Me.tableImagenes.total_docColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IssaldoNull() As Boolean
            Return Me.IsNull(Me.tableImagenes.saldoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetsaldoNull()
            Me(Me.tableImagenes.saldoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdesglose_palabrasNull() As Boolean
            Return Me.IsNull(Me.tableImagenes.desglose_palabrasColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdesglose_palabrasNull()
            Me(Me.tableImagenes.desglose_palabrasColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isnombre_empresaNull() As Boolean
            Return Me.IsNull(Me.tableImagenes.nombre_empresaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setnombre_empresaNull()
            Me(Me.tableImagenes.nombre_empresaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isgiro_empresaNull() As Boolean
            Return Me.IsNull(Me.tableImagenes.giro_empresaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setgiro_empresaNull()
            Me(Me.tableImagenes.giro_empresaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdireccion_empresaNull() As Boolean
            Return Me.IsNull(Me.tableImagenes.direccion_empresaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdireccion_empresaNull()
            Me(Me.tableImagenes.direccion_empresaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscomuna_empresaNull() As Boolean
            Return Me.IsNull(Me.tableImagenes.comuna_empresaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcomuna_empresaNull()
            Me(Me.tableImagenes.comuna_empresaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Istelefono_empresaNull() As Boolean
            Return Me.IsNull(Me.tableImagenes.telefono_empresaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Settelefono_empresaNull()
            Me(Me.tableImagenes.telefono_empresaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscorreo_empresaNull() As Boolean
            Return Me.IsNull(Me.tableImagenes.correo_empresaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcorreo_empresaNull()
            Me(Me.tableImagenes.correo_empresaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isrut_empresaNull() As Boolean
            Return Me.IsNull(Me.tableImagenes.rut_empresaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setrut_empresaNull()
            Me(Me.tableImagenes.rut_empresaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issaldo_finalNull() As Boolean
            Return Me.IsNull(Me.tableImagenes.saldo_finalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsaldo_finalNull()
            Me(Me.tableImagenes.saldo_finalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsrecintoNull() As Boolean
            Return Me.IsNull(Me.tableImagenes.recintoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetrecintoNull()
            Me(Me.tableImagenes.recintoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isfecha_vencimientoNull() As Boolean
            Return Me.IsNull(Me.tableImagenes.fecha_vencimientoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setfecha_vencimientoNull()
            Me(Me.tableImagenes.fecha_vencimientoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsinteresNull() As Boolean
            Return Me.IsNull(Me.tableImagenes.interesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetinteresNull()
            Me(Me.tableImagenes.interesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsgastosNull() As Boolean
            Return Me.IsNull(Me.tableImagenes.gastosColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetgastosNull()
            Me(Me.tableImagenes.gastosColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscupo_totalNull() As Boolean
            Return Me.IsNull(Me.tableImagenes.cupo_totalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcupo_totalNull()
            Me(Me.tableImagenes.cupo_totalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscupo_disponibleNull() As Boolean
            Return Me.IsNull(Me.tableImagenes.cupo_disponibleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcupo_disponibleNull()
            Me(Me.tableImagenes.cupo_disponibleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdeudaNull() As Boolean
            Return Me.IsNull(Me.tableImagenes.deudaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdeudaNull()
            Me(Me.tableImagenes.deudaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Istotal_1Null() As Boolean
            Return Me.IsNull(Me.tableImagenes.total_1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Settotal_1Null()
            Me(Me.tableImagenes.total_1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Istotal_2Null() As Boolean
            Return Me.IsNull(Me.tableImagenes.total_2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Settotal_2Null()
            Me(Me.tableImagenes.total_2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Istotal_3Null() As Boolean
            Return Me.IsNull(Me.tableImagenes.total_3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Settotal_3Null()
            Me(Me.tableImagenes.total_3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Istotal_4Null() As Boolean
            Return Me.IsNull(Me.tableImagenes.total_4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Settotal_4Null()
            Me(Me.tableImagenes.total_4Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class ImagenesRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ImagenesRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As ImagenesRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As ImagenesRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
