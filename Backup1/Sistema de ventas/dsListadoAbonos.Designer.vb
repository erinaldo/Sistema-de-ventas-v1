'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión del motor en tiempo de ejecución:2.0.50727.5420
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsListadoAbonos"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsListadoAbonos
    Inherits Global.System.Data.DataSet
    
    Private tableListadoAbonos As ListadoAbonosDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("ListadoAbonos")) Is Nothing) Then
                MyBase.Tables.Add(New ListadoAbonosDataTable(ds.Tables("ListadoAbonos")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ListadoAbonos() As ListadoAbonosDataTable
        Get
            Return Me.tableListadoAbonos
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsListadoAbonos = CType(MyBase.Clone,dsListadoAbonos)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("ListadoAbonos")) Is Nothing) Then
                MyBase.Tables.Add(New ListadoAbonosDataTable(ds.Tables("ListadoAbonos")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableListadoAbonos = CType(MyBase.Tables("ListadoAbonos"),ListadoAbonosDataTable)
        If (initTable = true) Then
            If (Not (Me.tableListadoAbonos) Is Nothing) Then
                Me.tableListadoAbonos.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "dsListadoAbonos"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsImagenes.xsd"
        Me.Locale = New Global.System.Globalization.CultureInfo("en-US")
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableListadoAbonos = New ListadoAbonosDataTable
        MyBase.Tables.Add(Me.tableListadoAbonos)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeListadoAbonos() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsListadoAbonos = New dsListadoAbonos
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub ListadoAbonosRowChangeEventHandler(ByVal sender As Object, ByVal e As ListadoAbonosRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ListadoAbonosDataTable
        Inherits Global.System.Data.TypedTableBase(Of ListadoAbonosRow)
        
        Private columnImagen As Global.System.Data.DataColumn
        
        Private columnnombre_cliente As Global.System.Data.DataColumn
        
        Private columnrut_cliente As Global.System.Data.DataColumn
        
        Private columndesde As Global.System.Data.DataColumn
        
        Private columnhasta As Global.System.Data.DataColumn
        
        Private columnfecha As Global.System.Data.DataColumn
        
        Private columnnumero As Global.System.Data.DataColumn
        
        Private columncondicion As Global.System.Data.DataColumn
        
        Private columndetalle As Global.System.Data.DataColumn
        
        Private columncliente_detalle As Global.System.Data.DataColumn
        
        Private columnrut_detalle As Global.System.Data.DataColumn
        
        Private columntotal As Global.System.Data.DataColumn
        
        Private columnusuario As Global.System.Data.DataColumn
        
        Private columnnombre_empresa As Global.System.Data.DataColumn
        
        Private columngiro_empresa As Global.System.Data.DataColumn
        
        Private columndireccion_empresa As Global.System.Data.DataColumn
        
        Private columnciudad_empresa As Global.System.Data.DataColumn
        
        Private columntelefono_empresa As Global.System.Data.DataColumn
        
        Private columncorreo_empresa As Global.System.Data.DataColumn
        
        Private columnrut_empresa As Global.System.Data.DataColumn
        
        Private columnestado As Global.System.Data.DataColumn
        
        Private columnfinal As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ListadoAbonos"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ImagenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImagen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nombre_clienteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnombre_cliente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property rut_clienteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrut_cliente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property desdeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndesde
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property hastaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnhasta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property fechaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfecha
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property numeroColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnumero
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property condicionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncondicion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property detalleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndetalle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cliente_detalleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncliente_detalle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property rut_detalleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrut_detalle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property totalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property usuarioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnusuario
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nombre_empresaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnombre_empresa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property giro_empresaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columngiro_empresa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property direccion_empresaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndireccion_empresa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ciudad_empresaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnciudad_empresa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property telefono_empresaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntelefono_empresa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property correo_empresaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncorreo_empresa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property rut_empresaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrut_empresa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property estadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnestado
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property finalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfinal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ListadoAbonosRow
            Get
                Return CType(Me.Rows(index),ListadoAbonosRow)
            End Get
        End Property
        
        Public Event ListadoAbonosRowChanging As ListadoAbonosRowChangeEventHandler
        
        Public Event ListadoAbonosRowChanged As ListadoAbonosRowChangeEventHandler
        
        Public Event ListadoAbonosRowDeleting As ListadoAbonosRowChangeEventHandler
        
        Public Event ListadoAbonosRowDeleted As ListadoAbonosRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddListadoAbonosRow(ByVal row As ListadoAbonosRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddListadoAbonosRow( _
                    ByVal Imagen() As Byte,  _
                    ByVal nombre_cliente As String,  _
                    ByVal rut_cliente As String,  _
                    ByVal desde As String,  _
                    ByVal hasta As String,  _
                    ByVal fecha As String,  _
                    ByVal numero As Integer,  _
                    ByVal condicion As String,  _
                    ByVal detalle As String,  _
                    ByVal cliente_detalle As String,  _
                    ByVal rut_detalle As String,  _
                    ByVal total As Integer,  _
                    ByVal usuario As String,  _
                    ByVal nombre_empresa As String,  _
                    ByVal giro_empresa As String,  _
                    ByVal direccion_empresa As String,  _
                    ByVal ciudad_empresa As String,  _
                    ByVal telefono_empresa As String,  _
                    ByVal correo_empresa As String,  _
                    ByVal rut_empresa As String,  _
                    ByVal estado As String,  _
                    ByVal final As Integer) As ListadoAbonosRow
            Dim rowListadoAbonosRow As ListadoAbonosRow = CType(Me.NewRow,ListadoAbonosRow)
            Dim columnValuesArray() As Object = New Object() {Imagen, nombre_cliente, rut_cliente, desde, hasta, fecha, numero, condicion, detalle, cliente_detalle, rut_detalle, total, usuario, nombre_empresa, giro_empresa, direccion_empresa, ciudad_empresa, telefono_empresa, correo_empresa, rut_empresa, estado, final}
            rowListadoAbonosRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowListadoAbonosRow)
            Return rowListadoAbonosRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ListadoAbonosDataTable = CType(MyBase.Clone,ListadoAbonosDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ListadoAbonosDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnImagen = MyBase.Columns("Imagen")
            Me.columnnombre_cliente = MyBase.Columns("nombre_cliente")
            Me.columnrut_cliente = MyBase.Columns("rut_cliente")
            Me.columndesde = MyBase.Columns("desde")
            Me.columnhasta = MyBase.Columns("hasta")
            Me.columnfecha = MyBase.Columns("fecha")
            Me.columnnumero = MyBase.Columns("numero")
            Me.columncondicion = MyBase.Columns("condicion")
            Me.columndetalle = MyBase.Columns("detalle")
            Me.columncliente_detalle = MyBase.Columns("cliente_detalle")
            Me.columnrut_detalle = MyBase.Columns("rut_detalle")
            Me.columntotal = MyBase.Columns("total")
            Me.columnusuario = MyBase.Columns("usuario")
            Me.columnnombre_empresa = MyBase.Columns("nombre_empresa")
            Me.columngiro_empresa = MyBase.Columns("giro_empresa")
            Me.columndireccion_empresa = MyBase.Columns("direccion_empresa")
            Me.columnciudad_empresa = MyBase.Columns("ciudad_empresa")
            Me.columntelefono_empresa = MyBase.Columns("telefono_empresa")
            Me.columncorreo_empresa = MyBase.Columns("correo_empresa")
            Me.columnrut_empresa = MyBase.Columns("rut_empresa")
            Me.columnestado = MyBase.Columns("estado")
            Me.columnfinal = MyBase.Columns("final")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnImagen = New Global.System.Data.DataColumn("Imagen", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImagen)
            Me.columnnombre_cliente = New Global.System.Data.DataColumn("nombre_cliente", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnombre_cliente)
            Me.columnrut_cliente = New Global.System.Data.DataColumn("rut_cliente", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrut_cliente)
            Me.columndesde = New Global.System.Data.DataColumn("desde", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndesde)
            Me.columnhasta = New Global.System.Data.DataColumn("hasta", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnhasta)
            Me.columnfecha = New Global.System.Data.DataColumn("fecha", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfecha)
            Me.columnnumero = New Global.System.Data.DataColumn("numero", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnumero)
            Me.columncondicion = New Global.System.Data.DataColumn("condicion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncondicion)
            Me.columndetalle = New Global.System.Data.DataColumn("detalle", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndetalle)
            Me.columncliente_detalle = New Global.System.Data.DataColumn("cliente_detalle", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncliente_detalle)
            Me.columnrut_detalle = New Global.System.Data.DataColumn("rut_detalle", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrut_detalle)
            Me.columntotal = New Global.System.Data.DataColumn("total", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntotal)
            Me.columnusuario = New Global.System.Data.DataColumn("usuario", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnusuario)
            Me.columnnombre_empresa = New Global.System.Data.DataColumn("nombre_empresa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnombre_empresa)
            Me.columngiro_empresa = New Global.System.Data.DataColumn("giro_empresa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columngiro_empresa)
            Me.columndireccion_empresa = New Global.System.Data.DataColumn("direccion_empresa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndireccion_empresa)
            Me.columnciudad_empresa = New Global.System.Data.DataColumn("ciudad_empresa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnciudad_empresa)
            Me.columntelefono_empresa = New Global.System.Data.DataColumn("telefono_empresa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntelefono_empresa)
            Me.columncorreo_empresa = New Global.System.Data.DataColumn("correo_empresa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncorreo_empresa)
            Me.columnrut_empresa = New Global.System.Data.DataColumn("rut_empresa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrut_empresa)
            Me.columnestado = New Global.System.Data.DataColumn("estado", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnestado)
            Me.columnfinal = New Global.System.Data.DataColumn("final", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfinal)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewListadoAbonosRow() As ListadoAbonosRow
            Return CType(Me.NewRow,ListadoAbonosRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ListadoAbonosRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ListadoAbonosRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ListadoAbonosRowChangedEvent) Is Nothing) Then
                RaiseEvent ListadoAbonosRowChanged(Me, New ListadoAbonosRowChangeEvent(CType(e.Row,ListadoAbonosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ListadoAbonosRowChangingEvent) Is Nothing) Then
                RaiseEvent ListadoAbonosRowChanging(Me, New ListadoAbonosRowChangeEvent(CType(e.Row,ListadoAbonosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ListadoAbonosRowDeletedEvent) Is Nothing) Then
                RaiseEvent ListadoAbonosRowDeleted(Me, New ListadoAbonosRowChangeEvent(CType(e.Row,ListadoAbonosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ListadoAbonosRowDeletingEvent) Is Nothing) Then
                RaiseEvent ListadoAbonosRowDeleting(Me, New ListadoAbonosRowChangeEvent(CType(e.Row,ListadoAbonosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveListadoAbonosRow(ByVal row As ListadoAbonosRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsListadoAbonos = New dsListadoAbonos
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ListadoAbonosDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class ListadoAbonosRow
        Inherits Global.System.Data.DataRow
        
        Private tableListadoAbonos As ListadoAbonosDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableListadoAbonos = CType(Me.Table,ListadoAbonosDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Imagen() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableListadoAbonos.ImagenColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Imagen' de la tabla 'ListadoAbonos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableListadoAbonos.ImagenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nombre_cliente() As String
            Get
                Try 
                    Return CType(Me(Me.tableListadoAbonos.nombre_clienteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'nombre_cliente' de la tabla 'ListadoAbonos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableListadoAbonos.nombre_clienteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property rut_cliente() As String
            Get
                Try 
                    Return CType(Me(Me.tableListadoAbonos.rut_clienteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'rut_cliente' de la tabla 'ListadoAbonos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableListadoAbonos.rut_clienteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property desde() As String
            Get
                Try 
                    Return CType(Me(Me.tableListadoAbonos.desdeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'desde' de la tabla 'ListadoAbonos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableListadoAbonos.desdeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property hasta() As String
            Get
                Try 
                    Return CType(Me(Me.tableListadoAbonos.hastaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'hasta' de la tabla 'ListadoAbonos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableListadoAbonos.hastaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property fecha() As String
            Get
                Try 
                    Return CType(Me(Me.tableListadoAbonos.fechaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'fecha' de la tabla 'ListadoAbonos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableListadoAbonos.fechaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property numero() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableListadoAbonos.numeroColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'numero' de la tabla 'ListadoAbonos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableListadoAbonos.numeroColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property condicion() As String
            Get
                Try 
                    Return CType(Me(Me.tableListadoAbonos.condicionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'condicion' de la tabla 'ListadoAbonos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableListadoAbonos.condicionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property detalle() As String
            Get
                Try 
                    Return CType(Me(Me.tableListadoAbonos.detalleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'detalle' de la tabla 'ListadoAbonos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableListadoAbonos.detalleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cliente_detalle() As String
            Get
                Try 
                    Return CType(Me(Me.tableListadoAbonos.cliente_detalleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'cliente_detalle' de la tabla 'ListadoAbonos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableListadoAbonos.cliente_detalleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property rut_detalle() As String
            Get
                Try 
                    Return CType(Me(Me.tableListadoAbonos.rut_detalleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'rut_detalle' de la tabla 'ListadoAbonos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableListadoAbonos.rut_detalleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property total() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableListadoAbonos.totalColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'total' de la tabla 'ListadoAbonos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableListadoAbonos.totalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property usuario() As String
            Get
                Try 
                    Return CType(Me(Me.tableListadoAbonos.usuarioColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'usuario' de la tabla 'ListadoAbonos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableListadoAbonos.usuarioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nombre_empresa() As String
            Get
                Try 
                    Return CType(Me(Me.tableListadoAbonos.nombre_empresaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'nombre_empresa' de la tabla 'ListadoAbonos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableListadoAbonos.nombre_empresaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property giro_empresa() As String
            Get
                Try 
                    Return CType(Me(Me.tableListadoAbonos.giro_empresaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'giro_empresa' de la tabla 'ListadoAbonos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableListadoAbonos.giro_empresaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property direccion_empresa() As String
            Get
                Try 
                    Return CType(Me(Me.tableListadoAbonos.direccion_empresaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'direccion_empresa' de la tabla 'ListadoAbonos' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableListadoAbonos.direccion_empresaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ciudad_empresa() As String
            Get
                Try 
                    Return CType(Me(Me.tableListadoAbonos.ciudad_empresaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ciudad_empresa' de la tabla 'ListadoAbonos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableListadoAbonos.ciudad_empresaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property telefono_empresa() As String
            Get
                Try 
                    Return CType(Me(Me.tableListadoAbonos.telefono_empresaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'telefono_empresa' de la tabla 'ListadoAbonos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableListadoAbonos.telefono_empresaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property correo_empresa() As String
            Get
                Try 
                    Return CType(Me(Me.tableListadoAbonos.correo_empresaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'correo_empresa' de la tabla 'ListadoAbonos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableListadoAbonos.correo_empresaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property rut_empresa() As String
            Get
                Try 
                    Return CType(Me(Me.tableListadoAbonos.rut_empresaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'rut_empresa' de la tabla 'ListadoAbonos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableListadoAbonos.rut_empresaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property estado() As String
            Get
                Try 
                    Return CType(Me(Me.tableListadoAbonos.estadoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'estado' de la tabla 'ListadoAbonos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableListadoAbonos.estadoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property final() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableListadoAbonos.finalColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'final' de la tabla 'ListadoAbonos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableListadoAbonos.finalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsImagenNull() As Boolean
            Return Me.IsNull(Me.tableListadoAbonos.ImagenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetImagenNull()
            Me(Me.tableListadoAbonos.ImagenColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isnombre_clienteNull() As Boolean
            Return Me.IsNull(Me.tableListadoAbonos.nombre_clienteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setnombre_clienteNull()
            Me(Me.tableListadoAbonos.nombre_clienteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isrut_clienteNull() As Boolean
            Return Me.IsNull(Me.tableListadoAbonos.rut_clienteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setrut_clienteNull()
            Me(Me.tableListadoAbonos.rut_clienteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdesdeNull() As Boolean
            Return Me.IsNull(Me.tableListadoAbonos.desdeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdesdeNull()
            Me(Me.tableListadoAbonos.desdeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IshastaNull() As Boolean
            Return Me.IsNull(Me.tableListadoAbonos.hastaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SethastaNull()
            Me(Me.tableListadoAbonos.hastaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsfechaNull() As Boolean
            Return Me.IsNull(Me.tableListadoAbonos.fechaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetfechaNull()
            Me(Me.tableListadoAbonos.fechaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsnumeroNull() As Boolean
            Return Me.IsNull(Me.tableListadoAbonos.numeroColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetnumeroNull()
            Me(Me.tableListadoAbonos.numeroColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscondicionNull() As Boolean
            Return Me.IsNull(Me.tableListadoAbonos.condicionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcondicionNull()
            Me(Me.tableListadoAbonos.condicionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdetalleNull() As Boolean
            Return Me.IsNull(Me.tableListadoAbonos.detalleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdetalleNull()
            Me(Me.tableListadoAbonos.detalleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscliente_detalleNull() As Boolean
            Return Me.IsNull(Me.tableListadoAbonos.cliente_detalleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcliente_detalleNull()
            Me(Me.tableListadoAbonos.cliente_detalleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isrut_detalleNull() As Boolean
            Return Me.IsNull(Me.tableListadoAbonos.rut_detalleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setrut_detalleNull()
            Me(Me.tableListadoAbonos.rut_detalleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IstotalNull() As Boolean
            Return Me.IsNull(Me.tableListadoAbonos.totalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SettotalNull()
            Me(Me.tableListadoAbonos.totalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsusuarioNull() As Boolean
            Return Me.IsNull(Me.tableListadoAbonos.usuarioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetusuarioNull()
            Me(Me.tableListadoAbonos.usuarioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isnombre_empresaNull() As Boolean
            Return Me.IsNull(Me.tableListadoAbonos.nombre_empresaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setnombre_empresaNull()
            Me(Me.tableListadoAbonos.nombre_empresaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isgiro_empresaNull() As Boolean
            Return Me.IsNull(Me.tableListadoAbonos.giro_empresaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setgiro_empresaNull()
            Me(Me.tableListadoAbonos.giro_empresaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdireccion_empresaNull() As Boolean
            Return Me.IsNull(Me.tableListadoAbonos.direccion_empresaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdireccion_empresaNull()
            Me(Me.tableListadoAbonos.direccion_empresaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isciudad_empresaNull() As Boolean
            Return Me.IsNull(Me.tableListadoAbonos.ciudad_empresaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setciudad_empresaNull()
            Me(Me.tableListadoAbonos.ciudad_empresaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Istelefono_empresaNull() As Boolean
            Return Me.IsNull(Me.tableListadoAbonos.telefono_empresaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Settelefono_empresaNull()
            Me(Me.tableListadoAbonos.telefono_empresaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscorreo_empresaNull() As Boolean
            Return Me.IsNull(Me.tableListadoAbonos.correo_empresaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcorreo_empresaNull()
            Me(Me.tableListadoAbonos.correo_empresaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isrut_empresaNull() As Boolean
            Return Me.IsNull(Me.tableListadoAbonos.rut_empresaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setrut_empresaNull()
            Me(Me.tableListadoAbonos.rut_empresaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsestadoNull() As Boolean
            Return Me.IsNull(Me.tableListadoAbonos.estadoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetestadoNull()
            Me(Me.tableListadoAbonos.estadoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsfinalNull() As Boolean
            Return Me.IsNull(Me.tableListadoAbonos.finalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetfinalNull()
            Me(Me.tableListadoAbonos.finalColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class ListadoAbonosRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ListadoAbonosRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As ListadoAbonosRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As ListadoAbonosRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
