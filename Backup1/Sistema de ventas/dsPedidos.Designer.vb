'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión del motor en tiempo de ejecución:2.0.50727.5420
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsPedidos"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsPedidos
    Inherits Global.System.Data.DataSet
    
    Private tablePedidos As PedidosDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("Pedidos")) Is Nothing) Then
                MyBase.Tables.Add(New PedidosDataTable(ds.Tables("Pedidos")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Pedidos() As PedidosDataTable
        Get
            Return Me.tablePedidos
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsPedidos = CType(MyBase.Clone,dsPedidos)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("Pedidos")) Is Nothing) Then
                MyBase.Tables.Add(New PedidosDataTable(ds.Tables("Pedidos")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tablePedidos = CType(MyBase.Tables("Pedidos"),PedidosDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePedidos) Is Nothing) Then
                Me.tablePedidos.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "dsPedidos"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsImagenes.xsd"
        Me.Locale = New Global.System.Globalization.CultureInfo("en-US")
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tablePedidos = New PedidosDataTable
        MyBase.Tables.Add(Me.tablePedidos)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializePedidos() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsPedidos = New dsPedidos
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub PedidosRowChangeEventHandler(ByVal sender As Object, ByVal e As PedidosRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PedidosDataTable
        Inherits Global.System.Data.TypedTableBase(Of PedidosRow)
        
        Private columnImagen As Global.System.Data.DataColumn
        
        Private columncodigo_pedido As Global.System.Data.DataColumn
        
        Private columnproveedor As Global.System.Data.DataColumn
        
        Private columndesde As Global.System.Data.DataColumn
        
        Private columnvendedor As Global.System.Data.DataColumn
        
        Private columnprioridad As Global.System.Data.DataColumn
        
        Private columnhasta As Global.System.Data.DataColumn
        
        Private columnpedido_detalle As Global.System.Data.DataColumn
        
        Private columnvendedor_detalle As Global.System.Data.DataColumn
        
        Private columncodigo_detalle As Global.System.Data.DataColumn
        
        Private columnproveedor_detalle As Global.System.Data.DataColumn
        
        Private columncantidad_detalle As Global.System.Data.DataColumn
        
        Private columnprioridad_detalle As Global.System.Data.DataColumn
        
        Private columnfecha_detalle As Global.System.Data.DataColumn
        
        Private columnestado_detalle As Global.System.Data.DataColumn
        
        Private columnabono_detalle As Global.System.Data.DataColumn
        
        Private columnllegada_detalle As Global.System.Data.DataColumn
        
        Private columnnombre_empresa As Global.System.Data.DataColumn
        
        Private columngiro_empresa As Global.System.Data.DataColumn
        
        Private columndireccion_empresa As Global.System.Data.DataColumn
        
        Private columnciudad_empresa As Global.System.Data.DataColumn
        
        Private columntelefono_empresa As Global.System.Data.DataColumn
        
        Private columncorreo_empresa As Global.System.Data.DataColumn
        
        Private columnrut_empresa As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Pedidos"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ImagenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImagen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property codigo_pedidoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncodigo_pedido
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property proveedorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproveedor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property desdeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndesde
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property vendedorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvendedor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property prioridadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprioridad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property hastaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnhasta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pedido_detalleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpedido_detalle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property vendedor_detalleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvendedor_detalle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property codigo_detalleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncodigo_detalle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property proveedor_detalleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproveedor_detalle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cantidad_detalleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncantidad_detalle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property prioridad_detalleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprioridad_detalle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property fecha_detalleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfecha_detalle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property estado_detalleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnestado_detalle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property abono_detalleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnabono_detalle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property llegada_detalleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnllegada_detalle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nombre_empresaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnombre_empresa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property giro_empresaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columngiro_empresa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property direccion_empresaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndireccion_empresa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ciudad_empresaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnciudad_empresa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property telefono_empresaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntelefono_empresa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property correo_empresaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncorreo_empresa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property rut_empresaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrut_empresa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PedidosRow
            Get
                Return CType(Me.Rows(index),PedidosRow)
            End Get
        End Property
        
        Public Event PedidosRowChanging As PedidosRowChangeEventHandler
        
        Public Event PedidosRowChanged As PedidosRowChangeEventHandler
        
        Public Event PedidosRowDeleting As PedidosRowChangeEventHandler
        
        Public Event PedidosRowDeleted As PedidosRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddPedidosRow(ByVal row As PedidosRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddPedidosRow( _
                    ByVal Imagen() As Byte,  _
                    ByVal codigo_pedido As String,  _
                    ByVal proveedor As String,  _
                    ByVal desde As String,  _
                    ByVal vendedor As String,  _
                    ByVal prioridad As String,  _
                    ByVal hasta As String,  _
                    ByVal pedido_detalle As Integer,  _
                    ByVal vendedor_detalle As String,  _
                    ByVal codigo_detalle As String,  _
                    ByVal proveedor_detalle As String,  _
                    ByVal cantidad_detalle As Integer,  _
                    ByVal prioridad_detalle As String,  _
                    ByVal fecha_detalle As String,  _
                    ByVal estado_detalle As String,  _
                    ByVal abono_detalle As Integer,  _
                    ByVal llegada_detalle As String,  _
                    ByVal nombre_empresa As String,  _
                    ByVal giro_empresa As String,  _
                    ByVal direccion_empresa As String,  _
                    ByVal ciudad_empresa As String,  _
                    ByVal telefono_empresa As String,  _
                    ByVal correo_empresa As String,  _
                    ByVal rut_empresa As String) As PedidosRow
            Dim rowPedidosRow As PedidosRow = CType(Me.NewRow,PedidosRow)
            Dim columnValuesArray() As Object = New Object() {Imagen, codigo_pedido, proveedor, desde, vendedor, prioridad, hasta, pedido_detalle, vendedor_detalle, codigo_detalle, proveedor_detalle, cantidad_detalle, prioridad_detalle, fecha_detalle, estado_detalle, abono_detalle, llegada_detalle, nombre_empresa, giro_empresa, direccion_empresa, ciudad_empresa, telefono_empresa, correo_empresa, rut_empresa}
            rowPedidosRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPedidosRow)
            Return rowPedidosRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PedidosDataTable = CType(MyBase.Clone,PedidosDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PedidosDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnImagen = MyBase.Columns("Imagen")
            Me.columncodigo_pedido = MyBase.Columns("codigo_pedido")
            Me.columnproveedor = MyBase.Columns("proveedor")
            Me.columndesde = MyBase.Columns("desde")
            Me.columnvendedor = MyBase.Columns("vendedor")
            Me.columnprioridad = MyBase.Columns("prioridad")
            Me.columnhasta = MyBase.Columns("hasta")
            Me.columnpedido_detalle = MyBase.Columns("pedido_detalle")
            Me.columnvendedor_detalle = MyBase.Columns("vendedor_detalle")
            Me.columncodigo_detalle = MyBase.Columns("codigo_detalle")
            Me.columnproveedor_detalle = MyBase.Columns("proveedor_detalle")
            Me.columncantidad_detalle = MyBase.Columns("cantidad_detalle")
            Me.columnprioridad_detalle = MyBase.Columns("prioridad_detalle")
            Me.columnfecha_detalle = MyBase.Columns("fecha_detalle")
            Me.columnestado_detalle = MyBase.Columns("estado_detalle")
            Me.columnabono_detalle = MyBase.Columns("abono_detalle")
            Me.columnllegada_detalle = MyBase.Columns("llegada_detalle")
            Me.columnnombre_empresa = MyBase.Columns("nombre_empresa")
            Me.columngiro_empresa = MyBase.Columns("giro_empresa")
            Me.columndireccion_empresa = MyBase.Columns("direccion_empresa")
            Me.columnciudad_empresa = MyBase.Columns("ciudad_empresa")
            Me.columntelefono_empresa = MyBase.Columns("telefono_empresa")
            Me.columncorreo_empresa = MyBase.Columns("correo_empresa")
            Me.columnrut_empresa = MyBase.Columns("rut_empresa")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnImagen = New Global.System.Data.DataColumn("Imagen", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImagen)
            Me.columncodigo_pedido = New Global.System.Data.DataColumn("codigo_pedido", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncodigo_pedido)
            Me.columnproveedor = New Global.System.Data.DataColumn("proveedor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproveedor)
            Me.columndesde = New Global.System.Data.DataColumn("desde", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndesde)
            Me.columnvendedor = New Global.System.Data.DataColumn("vendedor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvendedor)
            Me.columnprioridad = New Global.System.Data.DataColumn("prioridad", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprioridad)
            Me.columnhasta = New Global.System.Data.DataColumn("hasta", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnhasta)
            Me.columnpedido_detalle = New Global.System.Data.DataColumn("pedido_detalle", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpedido_detalle)
            Me.columnvendedor_detalle = New Global.System.Data.DataColumn("vendedor_detalle", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvendedor_detalle)
            Me.columncodigo_detalle = New Global.System.Data.DataColumn("codigo_detalle", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncodigo_detalle)
            Me.columnproveedor_detalle = New Global.System.Data.DataColumn("proveedor_detalle", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproveedor_detalle)
            Me.columncantidad_detalle = New Global.System.Data.DataColumn("cantidad_detalle", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncantidad_detalle)
            Me.columnprioridad_detalle = New Global.System.Data.DataColumn("prioridad_detalle", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprioridad_detalle)
            Me.columnfecha_detalle = New Global.System.Data.DataColumn("fecha_detalle", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfecha_detalle)
            Me.columnestado_detalle = New Global.System.Data.DataColumn("estado_detalle", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnestado_detalle)
            Me.columnabono_detalle = New Global.System.Data.DataColumn("abono_detalle", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnabono_detalle)
            Me.columnllegada_detalle = New Global.System.Data.DataColumn("llegada_detalle", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnllegada_detalle)
            Me.columnnombre_empresa = New Global.System.Data.DataColumn("nombre_empresa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnombre_empresa)
            Me.columngiro_empresa = New Global.System.Data.DataColumn("giro_empresa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columngiro_empresa)
            Me.columndireccion_empresa = New Global.System.Data.DataColumn("direccion_empresa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndireccion_empresa)
            Me.columnciudad_empresa = New Global.System.Data.DataColumn("ciudad_empresa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnciudad_empresa)
            Me.columntelefono_empresa = New Global.System.Data.DataColumn("telefono_empresa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntelefono_empresa)
            Me.columncorreo_empresa = New Global.System.Data.DataColumn("correo_empresa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncorreo_empresa)
            Me.columnrut_empresa = New Global.System.Data.DataColumn("rut_empresa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrut_empresa)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewPedidosRow() As PedidosRow
            Return CType(Me.NewRow,PedidosRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PedidosRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PedidosRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PedidosRowChangedEvent) Is Nothing) Then
                RaiseEvent PedidosRowChanged(Me, New PedidosRowChangeEvent(CType(e.Row,PedidosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PedidosRowChangingEvent) Is Nothing) Then
                RaiseEvent PedidosRowChanging(Me, New PedidosRowChangeEvent(CType(e.Row,PedidosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PedidosRowDeletedEvent) Is Nothing) Then
                RaiseEvent PedidosRowDeleted(Me, New PedidosRowChangeEvent(CType(e.Row,PedidosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PedidosRowDeletingEvent) Is Nothing) Then
                RaiseEvent PedidosRowDeleting(Me, New PedidosRowChangeEvent(CType(e.Row,PedidosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemovePedidosRow(ByVal row As PedidosRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsPedidos = New dsPedidos
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PedidosDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class PedidosRow
        Inherits Global.System.Data.DataRow
        
        Private tablePedidos As PedidosDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePedidos = CType(Me.Table,PedidosDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Imagen() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tablePedidos.ImagenColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Imagen' de la tabla 'Pedidos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePedidos.ImagenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property codigo_pedido() As String
            Get
                Try 
                    Return CType(Me(Me.tablePedidos.codigo_pedidoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'codigo_pedido' de la tabla 'Pedidos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePedidos.codigo_pedidoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property proveedor() As String
            Get
                Try 
                    Return CType(Me(Me.tablePedidos.proveedorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'proveedor' de la tabla 'Pedidos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePedidos.proveedorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property desde() As String
            Get
                Try 
                    Return CType(Me(Me.tablePedidos.desdeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'desde' de la tabla 'Pedidos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePedidos.desdeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property vendedor() As String
            Get
                Try 
                    Return CType(Me(Me.tablePedidos.vendedorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'vendedor' de la tabla 'Pedidos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePedidos.vendedorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property prioridad() As String
            Get
                Try 
                    Return CType(Me(Me.tablePedidos.prioridadColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'prioridad' de la tabla 'Pedidos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePedidos.prioridadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property hasta() As String
            Get
                Try 
                    Return CType(Me(Me.tablePedidos.hastaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'hasta' de la tabla 'Pedidos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePedidos.hastaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pedido_detalle() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePedidos.pedido_detalleColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'pedido_detalle' de la tabla 'Pedidos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePedidos.pedido_detalleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property vendedor_detalle() As String
            Get
                Try 
                    Return CType(Me(Me.tablePedidos.vendedor_detalleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'vendedor_detalle' de la tabla 'Pedidos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePedidos.vendedor_detalleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property codigo_detalle() As String
            Get
                Try 
                    Return CType(Me(Me.tablePedidos.codigo_detalleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'codigo_detalle' de la tabla 'Pedidos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePedidos.codigo_detalleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property proveedor_detalle() As String
            Get
                Try 
                    Return CType(Me(Me.tablePedidos.proveedor_detalleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'proveedor_detalle' de la tabla 'Pedidos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePedidos.proveedor_detalleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cantidad_detalle() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePedidos.cantidad_detalleColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'cantidad_detalle' de la tabla 'Pedidos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePedidos.cantidad_detalleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property prioridad_detalle() As String
            Get
                Try 
                    Return CType(Me(Me.tablePedidos.prioridad_detalleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'prioridad_detalle' de la tabla 'Pedidos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePedidos.prioridad_detalleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property fecha_detalle() As String
            Get
                Try 
                    Return CType(Me(Me.tablePedidos.fecha_detalleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'fecha_detalle' de la tabla 'Pedidos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePedidos.fecha_detalleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property estado_detalle() As String
            Get
                Try 
                    Return CType(Me(Me.tablePedidos.estado_detalleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'estado_detalle' de la tabla 'Pedidos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePedidos.estado_detalleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property abono_detalle() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePedidos.abono_detalleColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'abono_detalle' de la tabla 'Pedidos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePedidos.abono_detalleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property llegada_detalle() As String
            Get
                Try 
                    Return CType(Me(Me.tablePedidos.llegada_detalleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'llegada_detalle' de la tabla 'Pedidos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePedidos.llegada_detalleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nombre_empresa() As String
            Get
                Try 
                    Return CType(Me(Me.tablePedidos.nombre_empresaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'nombre_empresa' de la tabla 'Pedidos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePedidos.nombre_empresaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property giro_empresa() As String
            Get
                Try 
                    Return CType(Me(Me.tablePedidos.giro_empresaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'giro_empresa' de la tabla 'Pedidos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePedidos.giro_empresaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property direccion_empresa() As String
            Get
                Try 
                    Return CType(Me(Me.tablePedidos.direccion_empresaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'direccion_empresa' de la tabla 'Pedidos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePedidos.direccion_empresaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ciudad_empresa() As String
            Get
                Try 
                    Return CType(Me(Me.tablePedidos.ciudad_empresaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ciudad_empresa' de la tabla 'Pedidos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePedidos.ciudad_empresaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property telefono_empresa() As String
            Get
                Try 
                    Return CType(Me(Me.tablePedidos.telefono_empresaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'telefono_empresa' de la tabla 'Pedidos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePedidos.telefono_empresaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property correo_empresa() As String
            Get
                Try 
                    Return CType(Me(Me.tablePedidos.correo_empresaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'correo_empresa' de la tabla 'Pedidos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePedidos.correo_empresaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property rut_empresa() As String
            Get
                Try 
                    Return CType(Me(Me.tablePedidos.rut_empresaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'rut_empresa' de la tabla 'Pedidos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePedidos.rut_empresaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsImagenNull() As Boolean
            Return Me.IsNull(Me.tablePedidos.ImagenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetImagenNull()
            Me(Me.tablePedidos.ImagenColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscodigo_pedidoNull() As Boolean
            Return Me.IsNull(Me.tablePedidos.codigo_pedidoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcodigo_pedidoNull()
            Me(Me.tablePedidos.codigo_pedidoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsproveedorNull() As Boolean
            Return Me.IsNull(Me.tablePedidos.proveedorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetproveedorNull()
            Me(Me.tablePedidos.proveedorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdesdeNull() As Boolean
            Return Me.IsNull(Me.tablePedidos.desdeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdesdeNull()
            Me(Me.tablePedidos.desdeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsvendedorNull() As Boolean
            Return Me.IsNull(Me.tablePedidos.vendedorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetvendedorNull()
            Me(Me.tablePedidos.vendedorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsprioridadNull() As Boolean
            Return Me.IsNull(Me.tablePedidos.prioridadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetprioridadNull()
            Me(Me.tablePedidos.prioridadColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IshastaNull() As Boolean
            Return Me.IsNull(Me.tablePedidos.hastaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SethastaNull()
            Me(Me.tablePedidos.hastaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispedido_detalleNull() As Boolean
            Return Me.IsNull(Me.tablePedidos.pedido_detalleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpedido_detalleNull()
            Me(Me.tablePedidos.pedido_detalleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isvendedor_detalleNull() As Boolean
            Return Me.IsNull(Me.tablePedidos.vendedor_detalleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setvendedor_detalleNull()
            Me(Me.tablePedidos.vendedor_detalleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscodigo_detalleNull() As Boolean
            Return Me.IsNull(Me.tablePedidos.codigo_detalleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcodigo_detalleNull()
            Me(Me.tablePedidos.codigo_detalleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproveedor_detalleNull() As Boolean
            Return Me.IsNull(Me.tablePedidos.proveedor_detalleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproveedor_detalleNull()
            Me(Me.tablePedidos.proveedor_detalleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscantidad_detalleNull() As Boolean
            Return Me.IsNull(Me.tablePedidos.cantidad_detalleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcantidad_detalleNull()
            Me(Me.tablePedidos.cantidad_detalleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isprioridad_detalleNull() As Boolean
            Return Me.IsNull(Me.tablePedidos.prioridad_detalleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setprioridad_detalleNull()
            Me(Me.tablePedidos.prioridad_detalleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isfecha_detalleNull() As Boolean
            Return Me.IsNull(Me.tablePedidos.fecha_detalleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setfecha_detalleNull()
            Me(Me.tablePedidos.fecha_detalleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isestado_detalleNull() As Boolean
            Return Me.IsNull(Me.tablePedidos.estado_detalleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setestado_detalleNull()
            Me(Me.tablePedidos.estado_detalleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isabono_detalleNull() As Boolean
            Return Me.IsNull(Me.tablePedidos.abono_detalleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setabono_detalleNull()
            Me(Me.tablePedidos.abono_detalleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isllegada_detalleNull() As Boolean
            Return Me.IsNull(Me.tablePedidos.llegada_detalleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setllegada_detalleNull()
            Me(Me.tablePedidos.llegada_detalleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isnombre_empresaNull() As Boolean
            Return Me.IsNull(Me.tablePedidos.nombre_empresaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setnombre_empresaNull()
            Me(Me.tablePedidos.nombre_empresaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isgiro_empresaNull() As Boolean
            Return Me.IsNull(Me.tablePedidos.giro_empresaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setgiro_empresaNull()
            Me(Me.tablePedidos.giro_empresaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdireccion_empresaNull() As Boolean
            Return Me.IsNull(Me.tablePedidos.direccion_empresaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdireccion_empresaNull()
            Me(Me.tablePedidos.direccion_empresaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isciudad_empresaNull() As Boolean
            Return Me.IsNull(Me.tablePedidos.ciudad_empresaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setciudad_empresaNull()
            Me(Me.tablePedidos.ciudad_empresaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Istelefono_empresaNull() As Boolean
            Return Me.IsNull(Me.tablePedidos.telefono_empresaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Settelefono_empresaNull()
            Me(Me.tablePedidos.telefono_empresaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscorreo_empresaNull() As Boolean
            Return Me.IsNull(Me.tablePedidos.correo_empresaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcorreo_empresaNull()
            Me(Me.tablePedidos.correo_empresaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isrut_empresaNull() As Boolean
            Return Me.IsNull(Me.tablePedidos.rut_empresaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setrut_empresaNull()
            Me(Me.tablePedidos.rut_empresaColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class PedidosRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PedidosRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As PedidosRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As PedidosRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
